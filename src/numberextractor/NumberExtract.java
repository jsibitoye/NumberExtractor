/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package numberextractor;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;

/**
 *
 * @author JOSHUA
 */
public class NumberExtract extends javax.swing.JFrame {

    File f,f2;
    //FileReader ff;
    BufferedReader bf;
    JFileChooser jf ;
    String line;
    
           
    public NumberExtract() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        jButton2.setText("Extract Number");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("generate staffs");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("generate status");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jButton3)
                        .addGap(75, 75, 75)
                        .addComponent(jButton4)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jButton2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jButton4)))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     jf= new JFileChooser();
     int chk = jf.showOpenDialog(null);
     if(chk==JFileChooser.APPROVE_OPTION){
         try{        
          f= jf.getSelectedFile();
          jTextField1.setText(f.getAbsolutePath());    
          }
         catch(Exception e){
         
         }
     }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // JFileChooser jf = new JFileChooser();
     String conString= "jdbc:mysql://localhost:3306/dispatchdb";
              String username= "root";
              String Password = "";
              PreparedStatement ps, psStaff, psCust,psitem;
             
    // int chk = jf.showSaveDialog(null);
   //  if(chk==JFileChooser.APPROVE_OPTION){
    
   
                try{ 
             Connection con = DriverManager.getConnection(conString, username, Password);
              System.out.println("conected "+ con);
             System.out.println(f.getAbsolutePath());
             f2 = jf.getSelectedFile();
             bf = new BufferedReader(new FileReader(f));
             line= bf.readLine();
             String ID = "Item2020AC00", phone="0";
             int nameCount =0, counter=0, goodCount=0;
             ArrayList <String> StaffList = new ArrayList();
              ArrayList <String> CustomerList = new ArrayList();
              ArrayList <String> ShipedItem = new ArrayList();
              
              String Items[] = {"Laptop","Phone","TextBooks","Cloth","Provisions","Drinks"," Iron and steel","Television","Minor cargo"
                      ,"Lossion","Toy","Iron","Blender","Air Conditioner","General Electronics","Funiture"};
              String Place[] = {"Lagos","Kano","Ibadan","Ife","Abuja","Jos","Port Harcourt","Benin","Zaria","Oyo","Ilorin", "Kogi","Kalaba","Yola","Gombe"};
              
              String Tevent[] = {"Truck", "Car", "Bike"};
              String sqlstaff= "SELECT * FROM staff";
                psStaff= (PreparedStatement) con.prepareStatement(sqlstaff);
                ResultSet rs = psStaff.executeQuery();
                while(rs.next()){

                  StaffList.add(rs.getString(1));
                }
                 System.out.println(StaffList);
                 
                 //****
                  String sqlitem= "SELECT * FROM shipped_item";
                psitem= (PreparedStatement) con.prepareStatement(sqlitem);
                ResultSet rsItem = psitem.executeQuery();
                while(rsItem.next()){

                  ShipedItem.add(rs.getString(1));
                }
                 System.out.println(ShipedItem);
                 //***
                 
                 
                String sqlCustomer= "SELECT * FROM customer";
                psCust= (PreparedStatement) con.prepareStatement(sqlCustomer);
                ResultSet rsCust = psCust.executeQuery();

                while(rsCust.next()){
                   CustomerList.add(rsCust.getString(1));
                }
                System.out.println(CustomerList);
             
            while(line !=null)
             {   //String spliter[]= line.split(";");
     
                if (nameCount>=560){
                     if (counter == 3){
                          
                     String sql = "INSERT INTO shipped_item (tracking_num, goods, origin, destination, delivery_route, rider_id, dispatched_by, customer_id, transport_event, receiver_name, receiver_phone, amount_paid, qauntity,dispatch_time)"
                           + "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        ps= (PreparedStatement) con.prepareStatement(sql);
                         //for (int i=0; i<12; i++)
                         ps.setString(1,ID+ Integer.toString(nameCount)+1);
                         System.out.println("out here #### number 1***");
                         
                         Random objGenerator = new Random();
                         int randomNumber = -1;
                         
                         while(randomNumber <0){
                             System.out.println("enter here");
                             randomNumber = objGenerator.nextInt(Items.length +1);
                             System.out.println("out here #### 1 R:" + randomNumber);
                             randomNumber -= 1;
                             if (randomNumber>-1)
                         ps.setString(2, Items[randomNumber]);
                         }
                         
                         
                         randomNumber = -1;
                         while(randomNumber <0){
                         randomNumber = objGenerator.nextInt(Place.length+1);
                         System.out.println("out here #### 2 R:" + randomNumber);
                         randomNumber -= 1;
                             if (randomNumber>-1)
                         ps.setString(3, Place[randomNumber]);                         
                     }
                         randomNumber = -1;
                         
                         while(randomNumber <0){
                         randomNumber = objGenerator.nextInt(Place.length+1);
                         System.out.println("out here #### 3R:" + randomNumber);
                         randomNumber -= 1;
                             if (randomNumber>-1)
                         ps.setString(4, Place[randomNumber]);
                         }
                         randomNumber = -1;
                         
                         while(randomNumber <0){
                         randomNumber = objGenerator.nextInt(Place.length+1);
                         System.out.println("out here #### 4R:" + randomNumber);
                         randomNumber -= 1;
                             if (randomNumber>-1)
                         ps.setString(5, Place[randomNumber]);
                         }
                         randomNumber = -1;
                         
                         
                         randomNumber = objGenerator.nextInt(26);
                         ps.setString(6, StaffList.get(randomNumber));
                         System.out.println("out here #### 5");
                         
                          randomNumber = objGenerator.nextInt(26);
                         ps.setString(7, StaffList.get(randomNumber));
                     System.out.println("out here #### 6");
                     
                         randomNumber = objGenerator.nextInt(865);
                         ps.setString(8, CustomerList.get(randomNumber));
                         System.out.println("out here #### 7");
                            
                         randomNumber = -1;
                         while(randomNumber <0){
                         randomNumber = objGenerator.nextInt(4);
                         randomNumber -=1;
                         if(randomNumber> -1)
                         ps.setString(9, Tevent[randomNumber]);
                         System.out.println("out here event #### 8 R:" + randomNumber);
                         }
                         
                         ps.setString(10, line);
                         System.out.println("out here #### 9");
                         
                         randomNumber = 0;
                          while(phone.length()<11){
                             randomNumber = objGenerator.nextInt(10);
                             phone = phone+ Integer.toString(randomNumber); 
                         }
                          ps.setString(11,phone);
                          phone ="0";
                          System.out.println("out here #### 10");
                         
                         randomNumber = -1;
                         while(randomNumber<200){
                             randomNumber = objGenerator.nextInt(2501);
                         }
                          ps.setInt(12,randomNumber);
                          System.out.println("out here #### 11");
                        
                           randomNumber = 0;
                             randomNumber = objGenerator.nextInt(101);
                          ps.setInt(13,randomNumber);
                          System.out.println("out here #### 12");
                         
                          
                          //************date... 
                          randomNumber = 0;
                          String Dyear = "20",Dmonth ="",Dday="", Doutput;
                                  
                          while(randomNumber<19)
                              randomNumber = objGenerator.nextInt(22);
                          Dyear = Dyear+Integer.toString(randomNumber);
                          
                          randomNumber =0;
                          while(randomNumber<1)
                              randomNumber = objGenerator.nextInt(29);
                          if(randomNumber <10)
                              Dday = Dday+"0" +Integer.toString(randomNumber);
                          else Dday = Integer.toString(randomNumber);
                          
                           randomNumber =0;
                          while(randomNumber<1)
                              randomNumber = objGenerator.nextInt(12);
                          if(randomNumber <10)
                              Dmonth = Dmonth+"0" +Integer.toString(randomNumber);
                          else Dmonth = Integer.toString(randomNumber);
                          
                          //######
                          String HH ="",MM ="",SS="";
                          randomNumber =-1;
                          while(randomNumber<1)
                              randomNumber = objGenerator.nextInt(24);
                          if(randomNumber <10)
                              HH = HH+"0" +Integer.toString(randomNumber);
                          else HH = Integer.toString(randomNumber);
                          
                           randomNumber =-1;
                          while(randomNumber<0)
                              randomNumber = objGenerator.nextInt(60);
                          if(randomNumber <10)
                              MM =MM+"0" +Integer.toString(randomNumber);
                          else MM = Integer.toString(randomNumber);
                          
                           randomNumber =-1;
                          while(randomNumber<0)
                              randomNumber = objGenerator.nextInt(60);
                          if(randomNumber <10)
                              SS =SS+"0" +Integer.toString(randomNumber);
                          else SS = Integer.toString(randomNumber);
                          
                          
                          
                          Doutput = Dyear +"-"+ Dmonth+"-" + Dday +" "+HH+":"+MM+":"+SS+".00" ;
                          System.out.println("SqlDate1before : " + Doutput);
                          LocalDateTime lctime= LocalDateTime.parse(Doutput.replace( " " , "T" ));
                          System.out.println("SqlDate1after : " + lctime);
                         // Date sqlDate1 = Date.valueOf(Doutput);
                           // Date date1=(Date) new SimpleDateFormat("yyyy-mm-dd hh:mm:ss").parse(Doutput); 

                          System.out.println("Sql******: " + ps.toString());
                          ps.setObject(14,lctime);
                          
                          //*********
                         ps.executeUpdate();
                         goodCount++;
                        System.out.println(line+ "inserted");
                      sql="";
                      counter = 0;
                     }
                     counter++;
                
            }
              //  System.out.println("current line "+line);
                line= bf.readLine();
                
                nameCount++;
                if (goodCount >600)
                    return;
                
            }
            
            bf.close();  
             System.out.println("thank you;");
            // 
         }
         catch(Exception exx){
          System.out.println("there has been an error"+ exx);
         }
   
   
    // code for shipped Item
//             try{ 
//             Connection con = DriverManager.getConnection(conString, username, Password);
//              System.out.println("conected "+ con);
//             System.out.println(f.getAbsolutePath());
//             f2 = jf.getSelectedFile();
//             bf = new BufferedReader(new FileReader(f));
//             line= bf.readLine();
//             String ID = "Item2020AC00", phone="0";
//             int nameCount =0, counter=0, goodCount=0;
//             ArrayList <String> StaffList = new ArrayList();
//              ArrayList <String> CustomerList = new ArrayList();
//              
//              String Items[] = {"Laptop","Phone","TextBooks","Cloth","Provisions","Drinks"," Iron and steel","Television","Minor cargo"
//                      ,"Lossion","Toy","Iron","Blender","Air Conditioner","General Electronics","Funiture"};
//              String Place[] = {"Lagos","Kano","Ibadan","Ife","Abuja","Jos","Port Harcourt","Benin","Zaria","Oyo","Ilorin", "Kogi","Kalaba","Yola","Gombe"};
//              
//              String Tevent[] = {"Truck", "Car", "Bike"};
//              String sqlstaff= "SELECT * FROM staff";
//                psStaff= (PreparedStatement) con.prepareStatement(sqlstaff);
//                ResultSet rs = psStaff.executeQuery();
//                while(rs.next()){
//
//                  StaffList.add(rs.getString(1));
//                }
//                 System.out.println(StaffList);
//                String sqlCustomer= "SELECT * FROM customer";
//                psCust= (PreparedStatement) con.prepareStatement(sqlCustomer);
//                ResultSet rsCust = psCust.executeQuery();
//
//                while(rsCust.next()){
//                   CustomerList.add(rsCust.getString(1));
//                }
//                System.out.println(CustomerList);
//             
//            while(line !=null)
//             {   //String spliter[]= line.split(";");
//     
//                if (nameCount>=560){
//                     if (counter == 3){
//                          
//                     String sql = "INSERT INTO shipped_item (tracking_num, goods, origin, destination, delivery_route, rider_id, dispatched_by, customer_id, transport_event, receiver_name, receiver_phone, amount_paid, qauntity,dispatch_time)"
//                           + "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
//                        ps= (PreparedStatement) con.prepareStatement(sql);
//                         //for (int i=0; i<12; i++)
//                         ps.setString(1,ID+ Integer.toString(nameCount)+1);
//                         System.out.println("out here #### number 1***");
//                         
//                         Random objGenerator = new Random();
//                         int randomNumber = -1;
//                         
//                         while(randomNumber <0){
//                             System.out.println("enter here");
//                             randomNumber = objGenerator.nextInt(Items.length +1);
//                             System.out.println("out here #### 1 R:" + randomNumber);
//                             randomNumber -= 1;
//                             if (randomNumber>-1)
//                         ps.setString(2, Items[randomNumber]);
//                         }
//                         
//                         
//                         randomNumber = -1;
//                         while(randomNumber <0){
//                         randomNumber = objGenerator.nextInt(Place.length+1);
//                         System.out.println("out here #### 2 R:" + randomNumber);
//                         randomNumber -= 1;
//                             if (randomNumber>-1)
//                         ps.setString(3, Place[randomNumber]);                         
//                     }
//                         randomNumber = -1;
//                         
//                         while(randomNumber <0){
//                         randomNumber = objGenerator.nextInt(Place.length+1);
//                         System.out.println("out here #### 3R:" + randomNumber);
//                         randomNumber -= 1;
//                             if (randomNumber>-1)
//                         ps.setString(4, Place[randomNumber]);
//                         }
//                         randomNumber = -1;
//                         
//                         while(randomNumber <0){
//                         randomNumber = objGenerator.nextInt(Place.length+1);
//                         System.out.println("out here #### 4R:" + randomNumber);
//                         randomNumber -= 1;
//                             if (randomNumber>-1)
//                         ps.setString(5, Place[randomNumber]);
//                         }
//                         randomNumber = -1;
//                         
//                         
//                         randomNumber = objGenerator.nextInt(26);
//                         ps.setString(6, StaffList.get(randomNumber));
//                         System.out.println("out here #### 5");
//                         
//                          randomNumber = objGenerator.nextInt(26);
//                         ps.setString(7, StaffList.get(randomNumber));
//                     System.out.println("out here #### 6");
//                     
//                         randomNumber = objGenerator.nextInt(865);
//                         ps.setString(8, CustomerList.get(randomNumber));
//                         System.out.println("out here #### 7");
//                            
//                         randomNumber = -1;
//                         while(randomNumber <0){
//                         randomNumber = objGenerator.nextInt(4);
//                         randomNumber -=1;
//                         if(randomNumber> -1)
//                         ps.setString(9, Tevent[randomNumber]);
//                         System.out.println("out here event #### 8 R:" + randomNumber);
//                         }
//                         
//                         ps.setString(10, line);
//                         System.out.println("out here #### 9");
//                         
//                         randomNumber = 0;
//                          while(phone.length()<11){
//                             randomNumber = objGenerator.nextInt(10);
//                             phone = phone+ Integer.toString(randomNumber); 
//                         }
//                          ps.setString(11,phone);
//                          phone ="0";
//                          System.out.println("out here #### 10");
//                         
//                         randomNumber = -1;
//                         while(randomNumber<200){
//                             randomNumber = objGenerator.nextInt(2501);
//                         }
//                          ps.setInt(12,randomNumber);
//                          System.out.println("out here #### 11");
//                        
//                           randomNumber = 0;
//                             randomNumber = objGenerator.nextInt(101);
//                          ps.setInt(13,randomNumber);
//                          System.out.println("out here #### 12");
//                         
//                          
//                          //************date... 
//                          randomNumber = 0;
//                          String Dyear = "20",Dmonth ="",Dday="", Doutput;
//                                  
//                          while(randomNumber<19)
//                              randomNumber = objGenerator.nextInt(22);
//                          Dyear = Dyear+Integer.toString(randomNumber);
//                          
//                          randomNumber =0;
//                          while(randomNumber<1)
//                              randomNumber = objGenerator.nextInt(29);
//                          if(randomNumber <10)
//                              Dday = Dday+"0" +Integer.toString(randomNumber);
//                          else Dday = Integer.toString(randomNumber);
//                          
//                           randomNumber =0;
//                          while(randomNumber<1)
//                              randomNumber = objGenerator.nextInt(12);
//                          if(randomNumber <10)
//                              Dmonth = Dmonth+"0" +Integer.toString(randomNumber);
//                          else Dmonth = Integer.toString(randomNumber);
//                          
//                          //######
//                          String HH ="",MM ="",SS="";
//                          randomNumber =-1;
//                          while(randomNumber<1)
//                              randomNumber = objGenerator.nextInt(24);
//                          if(randomNumber <10)
//                              HH = HH+"0" +Integer.toString(randomNumber);
//                          else HH = Integer.toString(randomNumber);
//                          
//                           randomNumber =-1;
//                          while(randomNumber<0)
//                              randomNumber = objGenerator.nextInt(60);
//                          if(randomNumber <10)
//                              MM =MM+"0" +Integer.toString(randomNumber);
//                          else MM = Integer.toString(randomNumber);
//                          
//                           randomNumber =-1;
//                          while(randomNumber<0)
//                              randomNumber = objGenerator.nextInt(60);
//                          if(randomNumber <10)
//                              SS =SS+"0" +Integer.toString(randomNumber);
//                          else SS = Integer.toString(randomNumber);
//                          
//                          
//                          
//                          Doutput = Dyear +"-"+ Dmonth+"-" + Dday +" "+HH+":"+MM+":"+SS+".00" ;
//                          System.out.println("SqlDate1before : " + Doutput);
//                          LocalDateTime lctime= LocalDateTime.parse(Doutput.replace( " " , "T" ));
//                          System.out.println("SqlDate1after : " + lctime);
//                         // Date sqlDate1 = Date.valueOf(Doutput);
//                           // Date date1=(Date) new SimpleDateFormat("yyyy-mm-dd hh:mm:ss").parse(Doutput); 
//
//                          System.out.println("Sql******: " + ps.toString());
//                          ps.setObject(14,lctime);
//                          
//                          //*********
//                         ps.executeUpdate();
//                         goodCount++;
//                        System.out.println(line+ "inserted");
//                      sql="";
//                      counter = 0;
//                     }
//                     counter++;
//                
//            }
//              //  System.out.println("current line "+line);
//                line= bf.readLine();
//                
//                nameCount++;
//                if (goodCount >600)
//                    return;
//                
//            }
//            
//            bf.close();  
//             System.out.println("thank you;");
//            // 
//         }
//         catch(Exception exx){
//          System.out.println("there has been an error"+ exx);
//         }
    
    // }
    //*************code to insert staff
//         try{ 
//             Connection con = DriverManager.getConnection(conString, username, Password);
//              System.out.println("conected "+ con);
//             System.out.println(f.getAbsolutePath());
//             f2 = jf.getSelectedFile();
//             bf = new BufferedReader(new FileReader(f));
//             line= bf.readLine();
//             String ID = "Item2020AC00", phone="0";
//             int nameCount =0, counter=0;
//             ArrayList <String> StaffList = new ArrayList();
//              ArrayList <String> CustomerList = new ArrayList();
//              
//              String Items[] = {"Laptop","Phone","TextBooks","Cloth","Provisions","Drinks"," Iron and steel","Minor cargo"};
//              String Place[] = {"Lagos","Kano","Ibadan","Ife","Abuja","Jos","Port Harcourt","Benin","Zaria"};
//               String sqlstaff= "SELECT * FROM staff";
//                psStaff= (PreparedStatement) con.prepareStatement(sqlstaff);
//                ResultSet rs = psStaff.executeQuery();
//                while(rs.next()){
//
//                  StaffList.add(rs.getString(1));
//                }
//                 System.out.println(StaffList);
//                String sqlCustomer= "SELECT * FROM customer";
//                psCust= (PreparedStatement) con.prepareStatement(sqlCustomer);
//                ResultSet rsCust = psCust.executeQuery();
//
//                while(rsCust.next()){
//                   CustomerList.add(rsCust.getString(1));
//                }
//                System.out.println(CustomerList);
//             
//            while(line !=null)
//            {   //String spliter[]= line.split(";");
//     
//                if (nameCount>=560){
//                     if (counter == 5){
//                          
//                     String sql = "INSERT INTO shipped_item (tracking_num, goods, origin, destination, delivery_route, rider_id, dispatched_by, customer_id, transport_event, receiver_name, receiver_phone, amount_paid, qauntity)"
//                           + "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)";
//                        ps= (PreparedStatement) con.prepareStatement(sql);
//                         //for (int i=0; i<12; i++)
//                         ps.setString(1,ID+ Integer.toString(nameCount)+1);
//                     
//                         ps.setString(2, line);
//                         counter = 0;
//                         
//                         ps.executeUpdate();
//                        System.out.println(line+ "inserted");
//                      sql="";
//                     }
//                     counter++;
//                
//            }
//              //  System.out.println("current line "+line);
//                line= bf.readLine();
//                
//                nameCount++;
//                
//            }
//            
//            bf.close();  
//             System.out.println("thank you;");
//            // 
//         }
//         catch(Exception exx){
//          System.out.println("there has been an error"+ exx);
//         }
         
         
         //****************** this code for inserting customer.
//                  try{ 
//             Connection con = DriverManager.getConnection(conString, username, Password);
//              System.out.println("conected "+ con);
//             System.out.println(f.getAbsolutePath());
//             f2 = jf.getSelectedFile();
//             bf = new BufferedReader(new FileReader(f));
//             line= bf.readLine();
//             String ID = "CustA50", phone="0";
//             int nameCount =0; int linecount = 0;
//            while(line !=null)
//            {   //String spliter[]= line.split(";");
//                if (nameCount>500){
//                    System.out.println("thank you; " +nameCount);
//                    
//                  if (linecount==4){
//                 String sql = "INSERT INTO customer(customer_id, customer_name, customer_age, customer_gender, customer_phone)"
//                           + "VALUES(?,?,?,?,?)";
//                        ps= (PreparedStatement) con.prepareStatement(sql);
//                         //for (int i=0; i<12; i++)
//                         ps.setString(1,ID+ Integer.toString(nameCount)+1);
//                         
//                         ps.setString(2, line);
//                         
//                         Random objGenerator = new Random();
//                         int randomNumber = 0;
//                         while(randomNumber<18){
//                             randomNumber = objGenerator.nextInt(80);
//                         }
//                          ps.setInt(3,randomNumber);
//                          
//                          randomNumber = 0;
//                          
//                             randomNumber = objGenerator.nextInt(2);
//                             if(randomNumber == 1){
//                              ps.setString(4,"Male");
//                             }
//                             else ps.setString(4,"Female");
//                             
//                          randomNumber = 0;
//                          while(phone.length()<11){
//                             randomNumber = objGenerator.nextInt(9);
//                             phone = phone+ Integer.toString(randomNumber); 
//                         }
//                          ps.setString(5,phone);
//                          phone ="0";
//                          
//                         ps.executeUpdate();
//                        System.out.println(line+ "inserted");
//                      sql="";
//                      linecount=0;
//                }
//                  linecount++;
//                  System.out.println("See Line Count here "+linecount);
//                }
//                
//               // System.out.println(line);
//                line= bf.readLine();
//                nameCount++;
//                
//                
//                if (nameCount>=6000)
//                    return;
//            }
//            
//            bf.close();  
//             System.out.println("thank you;");
//            // 
//         }
//         catch(Exception exx){
//          System.out.println("there has been an error"+ exx);
//         }
         //************************
  //   }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         String conString= "jdbc:mysql://localhost:3306/dispatchdb";
              String username= "root";
              String Password = "";
              PreparedStatement ps, psStaff, psCust,psitem;
                 try{ 
             Connection con = DriverManager.getConnection(conString, username, Password);
              System.out.println("conected "+ con);
             System.out.println(f.getAbsolutePath());
             f2 = jf.getSelectedFile();
             bf = new BufferedReader(new FileReader(f));
             line= bf.readLine();
             String ID = "StaFF0C07", phone="0";
             int nameCount =0, counter=0;
             ArrayList <String> StaffList = new ArrayList();
              ArrayList <String> CustomerList = new ArrayList();
              
              String Items[] = {"Laptop","Phone","TextBooks","Cloth","Provisions","Drinks"," Iron and steel","Minor cargo"};
              String Place[] = {"Lagos","Kano","Ibadan","Ife","Abuja","Jos","Port Harcourt","Benin","Zaria"};
               String sqlstaff= "SELECT * FROM staff";
                psStaff= (PreparedStatement) con.prepareStatement(sqlstaff);
                ResultSet rs = psStaff.executeQuery();
                while(rs.next()){

                  StaffList.add(rs.getString(1));
                }
                 System.out.println(StaffList);
                String sqlCustomer= "SELECT * FROM customer";
                psCust= (PreparedStatement) con.prepareStatement(sqlCustomer);
                ResultSet rsCust = psCust.executeQuery();

                while(rsCust.next()){
                   CustomerList.add(rsCust.getString(1));
                }
                System.out.println(CustomerList);
             
            while(line !=null)
            {   //String spliter[]= line.split(";");
     
            //    if (nameCount>=560){
            //         if (counter == 5){
                          
                     String sql = "INSERT INTO staff (staff_id, staff_name) VALUES(?,?)";
                        ps= (PreparedStatement) con.prepareStatement(sql);
                         //for (int i=0; i<12; i++)
                         ps.setString(1,ID+ Integer.toString(nameCount)+1);
                     
                         ps.setString(2, line);
                        // counter = 0;
                         
                         ps.executeUpdate();
                        System.out.println(line+ "inserted");
                      sql="";
           //          }
                     counter++;
                
          //  }
              //  System.out.println("current line "+line);
                line= bf.readLine();
                
                nameCount++;
                
            }
            
            bf.close();  
             System.out.println("thank you;");
            // 
         }
         catch(Exception exx){
          System.out.println("there has been an error"+ exx);
         }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
         String conString= "jdbc:mysql://localhost:3306/dispatchdb";
              String username= "root";
              String Password = "";
              PreparedStatement ps, psStaff, psCust,psitem;
             
    // int chk = jf.showSaveDialog(null);
   //  if(chk==JFileChooser.APPROVE_OPTION){
    
   
                try{ 
             Connection con = DriverManager.getConnection(conString, username, Password);
              System.out.println("conected "+ con);
           //  System.out.println(f.getAbsolutePath());
          //   f2 = jf.getSelectedFile();
            // bf = new BufferedReader(new FileReader(f));
             //line= bf.readLine();
             String ID = "Item2020AC00", phone="0";
             //int nameCount =0, counter=0, goodCount=0;
             ArrayList <String> StaffList = new ArrayList();
              ArrayList <String> CustomerList = new ArrayList();
              ArrayList <String> ShipedItem = new ArrayList();
              ArrayList <String> Dispatch_time = new ArrayList();
              
              String Items[] = {"Laptop","Phone","TextBooks","Cloth","Provisions","Drinks"," Iron and steel","Television","Minor cargo"
                      ,"Lossion","Toy","Iron","Blender","Air Conditioner","General Electronics","Funiture"};
              String Place[] = {"Lagos","Kano","Ibadan","Ife","Abuja","Jos","Port Harcourt","Benin","Zaria","Oyo","Ilorin", "Kogi","Kalaba","Yola","Gombe"};
              
              String Gstatus[] = {"Failed","Delivered"};
              
              String Freason[] = {"Damaged good","Delayed","Canceled"};
              
              String Tevent[] = {"Truck", "Car", "Bike"};
              String sqlstaff= "SELECT * FROM staff";
                psStaff= (PreparedStatement) con.prepareStatement(sqlstaff);
                ResultSet rs = psStaff.executeQuery();
                while(rs.next()){

                  StaffList.add(rs.getString(1));
                }
                 System.out.println(StaffList);
                 
                 //****
                  String sqlitem= "SELECT * FROM shipped_item";
                psitem= (PreparedStatement) con.prepareStatement(sqlitem);
                ResultSet rsItem = psitem.executeQuery();
                while(rsItem.next()){

                  ShipedItem.add(rsItem.getString(1));
                  Dispatch_time.add(rsItem.getString(12));
                }
                 System.out.println(ShipedItem);
                 System.out.println(" ## D TIEM :"+Dispatch_time);
                 //***
                 
                 
                String sqlCustomer= "SELECT * FROM customer";
                psCust= (PreparedStatement) con.prepareStatement(sqlCustomer);
                ResultSet rsCust = psCust.executeQuery();

                while(rsCust.next()){
                   CustomerList.add(rsCust.getString(1));
                }
                System.out.println(CustomerList);
             
            //while(line !=null)
            // {   //String spliter[]= line.split(";");
     
                //if (nameCount>=560){
                 //    if (counter == 3){
                          
                     String sql = "INSERT INTO status (tracking_num, good_status, failed_reason, update_time, staff_id)"
                           + "VALUES(?,?,?,?,?)";
                        ps= (PreparedStatement) con.prepareStatement(sql);
                        Random objGenerator = new Random();
                         int randomNumber = -1;
                         int count=1;
                         for (String temp : ShipedItem) {
                                //###########
                                ps.setString(1,temp);
                                
                                randomNumber = -1;
                                while(randomNumber <0){                                   
                                    randomNumber = objGenerator.nextInt(3);
                                     randomNumber -= 1;
                                     
                                   
                                     if (randomNumber>-1)
                                ps.setString(2, Gstatus[randomNumber]);
                                    
                                    if (randomNumber == 0){
                                        randomNumber=-1;
                                        while(randomNumber <0){
                                        randomNumber = objGenerator.nextInt(4);
                                        randomNumber -= 1;
                                            if (randomNumber>-1)
                                        ps.setString(3, Freason[randomNumber]);
                                        }                                     
                                    }
                                    else
                                        ps.setString(3, "");
                                }
                                System.out.println(ps);
                              //  all code here 
                                 
                              String []Holder = Dispatch_time.get(count).split(" ");
                              String []DateHolder2 = Holder[0].split("-");
                              String []TimeHolder3 = Holder[1].split(":");
                              
//                              int TTholder3 []=new int[3];
//                              for (int a = 0; a<TimeHolder3.length; a++){
//                                  if(Integer.parseInt(TimeHolder3[a])>8 && Integer.parseInt(TimeHolder3[a])<13){
//                                      randomNumber = objGenerator.nextInt(5);
//                                      TTholder3[a] = Integer.parseInt(TimeHolder3[a]) + randomNumber;
//                                  }
//                                  else{
//                                      TTholder3[a] = Integer.parseInt(TimeHolder3[a]);
//                                  }
//                                 
//                              }
//                              
                              int DDholder2[] = new int[3];
                               for (int a = 0; a<DateHolder2.length; a++){
                               DDholder2[a] = Integer.parseInt(DateHolder2[a]);
                              }                            
                              
//                              System.out.println(Arrays.toString(DDholder2));
//                              System.out.println(Arrays.toString(TTholder3));

                          randomNumber = 0;
                          String Dyear = "20",Dmonth ="",Dday="", Doutput;
                                  
                          while(randomNumber<19)
                              randomNumber = objGenerator.nextInt(22);
                          Dyear = Dyear+Integer.toString(randomNumber);
                          
                          randomNumber =0;
                          
                          while(randomNumber<1)
                              randomNumber = objGenerator.nextInt(29);
                          if(randomNumber <10)
                              Dday = Dday+"0" +Integer.toString(randomNumber);
                          else Dday = Integer.toString(randomNumber);
                          
                           randomNumber =0;
                          while(randomNumber<1)
                              randomNumber = objGenerator.nextInt(12);
                          if(randomNumber <10)
                              Dmonth = Dmonth+"0" +Integer.toString(randomNumber);
                          else Dmonth = Integer.toString(randomNumber);
                          
                          //######
                          String HH ="",MM ="",SS="";
                          randomNumber =-1;
                          while(randomNumber<1)
                              randomNumber = objGenerator.nextInt(24);
                          if(randomNumber <10)
                              HH = HH+"0" +Integer.toString(randomNumber);
                          else HH = Integer.toString(randomNumber);
                          
                           randomNumber =-1;
                          while(randomNumber<0)
                              randomNumber = objGenerator.nextInt(60);
                          if(randomNumber <10)
                              MM =MM+"0" +Integer.toString(randomNumber);
                          else MM = Integer.toString(randomNumber);
                          
                           randomNumber =-1;
                          while(randomNumber<0)
                              randomNumber = objGenerator.nextInt(60);
                          if(randomNumber <10)
                              SS =SS+"0" +Integer.toString(randomNumber);
                          else SS = Integer.toString(randomNumber);
                          
                          
                          
                          Doutput = Dyear +"-"+ Dmonth+"-" + Dday +" "+HH+":"+MM+":"+SS+".00" ;
                          System.out.println("SqlDate1before : " + Doutput);
                          LocalDateTime lctime= LocalDateTime.parse(Doutput.replace( " " , "T" ));
                          System.out.println("SqlDate1after : " + lctime);
                         // Date sqlDate1 = Date.valueOf(Doutput);
                           // Date date1=(Date) new SimpleDateFormat("yyyy-mm-dd hh:mm:ss").parse(Doutput); 

                          System.out.println("Sql******: " + ps.toString());
                          ps.setObject(4,lctime);
                          

                          randomNumber = objGenerator.nextInt(StaffList.size());
                          ps.setObject(5,StaffList.get(randomNumber));
                             
                           ps.executeUpdate();
                            }
                         
//                          //************date... 
                         
                          
                          //*********
                         ps.executeUpdate();
                       //  goodCount++;
                     //   System.out.println(line+ "inserted");
                    //  sql="";
                   //   counter = 0;
                   //  }
                  //   counter++;
                
           // }
              //  System.out.println("current line "+line);
         //       line= bf.readLine();
                
////                nameCount++;
////                if (goodCount >600)
////                    return;
                
          //  }
            
//            bf.close();  
//             System.out.println("thank you;");
//             
         }
         catch(Exception exx){
          System.out.println("there has been an error"+ exx);
         }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NumberExtract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NumberExtract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NumberExtract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NumberExtract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new NumberExtract().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
